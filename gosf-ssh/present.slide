SSH with Go
GoSF Meetup
25 Aug 2016

Chris Roche
Software Engineer, Lyft

http://rodaine.com
http://github.com/rodaine
@rodaine

* Why not just `ssh remote_host`?

* Because golang.org/x/crypto/ssh gives you:

- Cross platform code
- Testability
- Better error handling
- More capabilities
- And a more ergonomic CLI experience:

*Either:*

    $ ssh -o ProxyCommand='ssh proxy_host nc remote_server 22' remote_server

*Or:*

    $ sshThru proxy_host remote_server

* Opening A Connection

.code conn.go /Connect/,/END Connect/

- Can also specify timeouts, host checks, & more SSH goodies
- Each *AuthMethod* is attempted in order
- Handful of types:

 ssh.Password            // static secret
 ssh.PasswordCallback    // ask the user
 ssh.KeyboardInteractive // server-provided prompts
 ssh.RetryableAuthMethod // decorator for above
 ssh.PublicKeys          // key pairs
 ssh.PublicKeysCallback  // SSH-Agent

* Authentication Methods

.code auth.go /func KeyPair/,/END KeyPair/
.code auth.go /func SSHAgent/,/END SSHAgent/

* Auth + Connect

.code conn.go /func Run/,/END Run/

- Don't forget *client.Close()*!
- Need *crypto/x509* if keys are password-protected / PKCS8

* Run Command

.code cmd.go /func RunCmd/,

- One command or shell, one *ssh.Session*
- Similar API to *os/exec.Cmd*
- Don't forget *sess.Close()*!

* Open Shell

.code shell.go /func RunShell/,

* Proxy Through Bastion

.image bastion.png 300 _
.code proxy.go /func Proxy/,

* Multiplex Commands

.code multiplex.go /TailLog/,/END LIST/

* Multiplex Commands

.code multiplex.go /MultiTail/,

* Tunnel

.code tunnel.go /Tunnel/,/END TUNNEL/

* Reverse Tunnel / Proxy

.code tunnel.go /ReverseTunnel/,

* go get github.com/rodaine/sshutil
